map_type: costmap

obstacle_range: 2.5
raytrace_range: 3.0
# These parameters set thresholds on obstacle information put into the costmap. 
# The "obstacle_range" parameter determines the maximum range sensor reading that will result in an obstacle being put into the costmap. 
# Here, we have it set at 2.5 meters, which means that the robot will only update its map with information about obstacles that are within 2.5 meters of the base. 
# The "raytrace_range" parameter determines the range to which we will raytrace freespace given a sensor reading. 
# Setting it to 3.0 meters as we have above means that the robot will attempt to clear out space in front of it up to 3.0 meters away given a sensor reading.

transform_tolerance: 0.2

# lw_mse6_bot dims x: [-0.3 ... 0.375] y: [-0.15 ... 0.15] z: [ -0.056 ... 0.18 ] 
#footprint: [[0.375, 0.25], [0.375, -0.25], [-0.3, -0.25], [-0.3, 0.25]]
# robot_radius: 0.25 
inflation_radius: 0.7 
# Here we set either the footprint of the robot or the radius of the robot if it is circular. In the case of specifying the footprint, the center of the robot is assumed to be at (0.0, 0.0) and both clockwise and counterclockwise specifications are supported. We'll also set the inflation radius for the costmap. The inflation radius should be set to the maximum distance from obstacles at which a cost should be incurred. For example, setting the inflation radius at 0.55 meters means that the robot will treat all paths that stay 0.55 meters or more away from obstacles as having equal obstacle cost.

observation_sources: laser_scan_sensor

laser_scan_sensor: {sensor_frame: hokuyo, data_type: LaserScan, topic: /RoboND_where_am_i/laser/scan, marking: true, clearing: true}
